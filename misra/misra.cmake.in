#
# This file is part of MCUSim, an XSPICE library with microcontrollers.
#
# Copyright (C) 2017-2019 MCUSim Developers, see AUTHORS.txt for contributors.
#
# MCUSim is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# MCUSim is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# CMake script to check MISRA C:2012 rules by "make misra" command.
file(GLOB_RECURSE C_FILES "@CMAKE_SOURCE_DIR@/src/*.c")

# Load modules from our source tree too
set(CMAKE_MODULE_PATH "@CMAKE_CURRENT_SOURCE_DIR@/../cmake")

# Look for libraries, packages, etc.
find_package(cppcheck REQUIRED)
find_package(PythonInterp REQUIRED)

if (CPPCHECK_FOUND AND PYTHONINTERP_FOUND)
	message(STATUS "cppcheck executable: ${CPPCHECK_EXECUTABLE}")
	message(STATUS "cppcheck version: ${CPPCHECK_VERSION}")
	message(STATUS "python executable: ${PYTHON_EXECUTABLE}")
	message(STATUS "python version: ${PYTHON_VERSION_STRING}")

	foreach(C_FILE ${C_FILES})
		message(STATUS "[FILE]: ${C_FILE}")

		# Create dump for a file
		get_filename_component(WORKING_DIR ${C_FILE} DIRECTORY)
		execute_process(
			COMMAND ${CPPCHECK_EXECUTABLE} --dump ${C_FILE}
			RESULT_VARIABLE res
			WORKING_DIRECTORY ${WORKING_DIR}
		)

		# Run cppcheck addon to check MISRA C rules
		if (EXISTS "@CMAKE_CURRENT_SOURCE_DIR@/MISRA_C_2012.txt")
			execute_process(
				COMMAND ${PYTHON_EXECUTABLE} @CMAKE_CURRENT_SOURCE_DIR@/misra.py --rule-texts=@CMAKE_CURRENT_SOURCE_DIR@/MISRA_C_2012.txt ${C_FILE}.dump
				RESULT_VARIABLE res
				WORKING_DIRECTORY ${WORKING_DIR}
			)
		else()
			execute_process(
				COMMAND ${PYTHON_EXECUTABLE} @CMAKE_CURRENT_SOURCE_DIR@/misra.py ${C_FILE}.dump
				RESULT_VARIABLE res
				WORKING_DIRECTORY ${WORKING_DIR}
			)
		endif()

		# Remove dump
		if (EXISTS ${C_FILE}.dump)
			file(REMOVE ${C_FILE}.dump)
		endif()
	endforeach()
endif()
